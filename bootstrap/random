#!/usr/bin/env python
"""
This module select n random samples from a set of points in filename
"""
import random
from common.configuration import Configuration
from common.util import fatal

def select_n_random(input_file, output_file, n):
    """
    Select n random points in the file. This approach is innefficient since it loads the entire file in memory to sample it.
    If it becomes a bottleneck we should try the approach outlined in http://www.bryceboe.com/2009/03/23/random-lines-from-a-file/
    (after proving it is sound).
    """

    inpf = open(input_file, "r")
    lines = inpf.readlines()
    inpf.close()
    if (n > len(lines)):
        fatal("Not enough points in {0} to satisfy your sampling size of {1}"
              .format(input_file, n))

    samples = random.sample(lines, n)
    outf = open(output_file, "w")
    for s in samples:
        outf.write(s)

    outf.close()


if __name__ == "__main__":
    import argparse
    parser = argparse.ArgumentParser(description="Select random samples from a set of"
                                                 " points in the filename")
    parser.add_argument('configuration')
    parser.add_argument('output_file')
    args = parser.parse_args()

    conf = Configuration(args.configuration)
    select_n_random(conf("modules.bootstrap.params.data_file"), args.output_file, conf("modules.bootstrap.params.n", int))
